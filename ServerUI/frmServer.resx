<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>135, 17</value>
  </metadata>
  <metadata name="timerSender.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>49</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAACQAABILAAASCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAJSUlAKVlZULlJSUEJSUlA6VlZUNlJSUD5SUlBGVlZURlJSUEZSU
        lBCVlZUNlJSUDZSUlAyUlJQDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjIyMApSUlCuVlZVolJSUdJSUlHGVlZVwlJSUc5SU
        lHaVlZV2lJSUdpSUlHSVlZVwlJSUcJSUlGuUlJQ4iomKBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhYWFC21tbYIiISLbFxYX4h0c
        Hd4eHR7dGRgZ4RcWF+MXFhfjFxYX4xgXGOIdHB3eHh0e3R8eH91cW1ydh4eHFAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeHh4CyIh
        IssUExTmExIT5RMSE+UUExTmExIT5RMSE+UUExTmExIT5RMSE+UUExTmExIT5RMSE+UVFBXhcnJyHQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAWVlZAyAgIMETEhPmExIT5RMSE+UUExTmExIT5RMSE+UUExTmExIT5RMSE+UUExTmExIT5RMS
        E+YTEhPeUlJSDgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAADY2NoESEhLnFBMU5hQTFOYUExTmFBMU5hQTFOYUExTmFBMU5hQT
        FOYUExTmFBMU5hMSE+YrKyuoOzs7AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZGRjkQDxDqExIT5RMSE+UUExTmExIT5RMS
        E+UUExTmExIT5RMSE+UUExTmExIT5RIREug8PDxjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEtLSwYVFBXXExIT5hMS
        E+UUExTmExIT5RMSE+UUExTmExIT5RMSE+UUExTmExIT5Q8PD+lHR0cdAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAzMjOXExIT5xQTFOYUExTmFBMU5hQTFOYUExTmFBMU5hQTFOYUExTmExIT5iEgIb4/Pj8CAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABBQUFQERAR6RMSE+UUExTmExIT5RMSE+UUExTmExIT5RMSE+UUExTmEhES5zk5
        OXoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABKSkoTERAR4RMSE+YUExTmFBMU5hQTFOYUExTmFBMU5hQT
        FOYTExPmEA8Q6kJCQjMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABDQ0MBKysrrRMSE+YUExTmExIT5RMS
        E+UUExTmExIT5RMSE+UTEhPmGRgZz0RDRAcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPT09aBIR
        EugUExTmExIT5RMSE+UUExTmExIT5RMSE+UTEhPnNTU1kQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAASEdIJBAPEOcUExTmExIT5RMSE+UUExTmExIT5RMSE+UREBHpPDw8SgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAASUlJAx8fH8ITEhPmFBMU5hQTFOYUExTmFBMU5hMTE+YTEhPeSkpKDwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADs7O38SEhLnExIT5RMSE+UUExTmExIT5RMS
        E+YsLCynQUFBAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        CvENDQ3tEA8Q6xQTFOcUExTnEBAQ6g4NDu0LCgvxBwcH8gUEBbMGBgY5AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAABQUFFwQEBGAEBASbBAQExQQEBN0EBATeBAQEywQEBKQEBARsBQUFIgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////8AAP//gAH//wAA//8AAP//
        AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//4AA//8AAP//gAH//wAA//+AAf//AAD//8AB//8AAP//
        wAP//wAA///AA///AAD//8AD//8AAP//4Af//wAA///gB///AAD//+AH//8AAP//8Af//wAA///gA///
        AAD//4AA//8AAP/+AAB//wAA//wAAD//AAD/+AAAH/8AAP/wAAAP/wAA//AAAA//AAD/4AAAB/8AAP/g
        AAAH/wAA/8AAAAP/AAD/wAAAA/8AAP/AAAAD/wAA/8AAAAP/AAD/wAAAA/8AAP/AAAAD/wAA/8AAAAP/
        AAD/wAAAA/8AAP/AAAAD/wAA/+AAAAP/AAD/4AAAB/8AAP/gAAAH/wAA//AAAA//AAD/+AAAD/8AAP/4
        AAAf/wAA//wAAD//AAD//gAAf/8AAP//gAH//wAA///gB///AAD///////8AAP///////wAA////////
        AAA=
</value>
  </data>
</root>